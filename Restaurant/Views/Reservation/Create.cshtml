@model Restaurant.Models.ReservationCreateViewModel

@{
    ViewData["Title"] = "Create Reservation";
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <title>Create Reservation</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="~/css/reservationform.css"></link>
</head>
<body>
<a href="javascript:history.back()" class="back-link">
    ‚Üê Back to Table Selection
</a>

<div class="container">
    <div class="header">
        <h1>Complete Your Reservation</h1>
        <p>Please fill in your details to confirm your table booking</p>
    </div>

    <div class="reservation-summary">
        <div class="summary-title">Reservation Details</div>
        <div class="summary-grid">
            <div class="summary-item">
                <div class="summary-label">Table Number</div>
                <div class="summary-value" id="tableNumber">-</div>
            </div>
            <div class="summary-item">
                <div class="summary-label">Date</div>
                <div class="summary-value" id="reservationDate">-</div>
            </div>
            <div class="summary-item">
                <div class="summary-label">Time</div>
                <div class="summary-value" id="reservationTime">-</div>
            </div>
            <div class="summary-item">
                <div class="summary-label">Guests</div>
                <div class="summary-value" id="guestCount">-</div>
            </div>
        </div>
    </div>

    <form asp-action="Create" asp-controller="Reservation" method="post" id="reservationForm">
        <input type="hidden" name="TableId" id="hiddenTableId" />
        <input type="hidden" name="ReservationDate" id="hiddenDate" />
        <input type="hidden" name="ReservationHour" id="hiddenTime" />
        <input type="hidden" name="GuestNumber" id="hiddenGuests" />

        <div class="form-section">
            <div class="section-title">Personal Information</div>
            <div class="form-grid">
                <div class="form-group">
                    <label for="firstName">First Name <span class="required">*</span></label>
                    <input type="text" id="firstName" name="Name" required placeholder="Enter your first name">
                    <div class="error-message" id="firstNameError">Please enter your first name</div>
                </div>
                <div class="form-group">
                    <label for="lastName">Last Name <span class="required">*</span></label>
                    <input type="text" id="lastName" name="Surname" required placeholder="Enter your last name">
                    <div class="error-message" id="lastNameError">Please enter your last name</div>
                </div>
            </div>
        </div>

        <div class="form-section">
            <div class="section-title">Contact Information</div>
            <div class="form-grid">
                <div class="form-group">
                    <label for="phone">Phone Number <span class="required">*</span></label>
                    <input type="tel" id="phone" name="TelNo" required placeholder="+90 (555) 123-4567">
                    <div class="error-message" id="phoneError">Please enter a valid phone number</div>
                </div>
                <div class="form-group">
                    <label for="email">Email Address</label>
                    <input type="email" id="email" name="Email" placeholder="your.email@@example.com">
                    <div class="error-message" id="emailError">Please enter a valid email address</div>
                </div>
            </div>
        </div>

        <div class="form-section">
            <div class="section-title">Additional Information</div>
            <div class="form-group">
                <label for="specialRequests">Special Requests or Dietary Requirements</label>
                <textarea id="specialRequests" name="SpecialRequests" placeholder="Any allergies, special occasions, or other requests..."></textarea>
            </div>
        </div>

        <div class="button-group">
            <button type="button" class="btn btn-secondary" onclick="history.back()">
                Go Back
            </button>
            <button type="submit" class="btn btn-primary">
                Confirm Reservation
            </button>
        </div>
    </form>
</div>

<script>
    // Get URL parameters
    const urlParams = new URLSearchParams(window.location.search);
    const tableId = urlParams.get('tableId');
    const date = urlParams.get('date');
    const time = urlParams.get('time');
    const guests = urlParams.get('guests');

    // Display reservation details
    if (tableId) {
        document.getElementById('tableNumber').textContent = tableId;
        document.getElementById('hiddenTableId').value = tableId;
    }
    if (date) {
        const formattedDate = new Date(date).toLocaleDateString('en-US', {
            weekday: 'long',
            year: 'numeric',
            month: 'long',
            day: 'numeric'
        });
        document.getElementById('reservationDate').textContent = formattedDate;
        document.getElementById('hiddenDate').value = date;
    }
    if (time) {
        document.getElementById('reservationTime').textContent = time;
        document.getElementById('hiddenTime').value = time;
    }
    if (guests) {
        document.getElementById('guestCount').textContent = guests + (guests === '1' ? ' Guest' : ' Guests');
        document.getElementById('hiddenGuests').value = guests;
    }

    // Form validation
    document.getElementById('reservationForm').addEventListener('submit', function(e) {
        let isValid = true;

        // Clear previous errors
        document.querySelectorAll('.error-message').forEach(error => {
            error.style.display = 'none';
        });

        // Validate first name
        const firstName = document.getElementById('firstName').value.trim();
        if (!firstName) {
            document.getElementById('firstNameError').style.display = 'block';
            isValid = false;
        }

        // Validate last name
        const lastName = document.getElementById('lastName').value.trim();
        if (!lastName) {
            document.getElementById('lastNameError').style.display = 'block';
            isValid = false;
        }

        // Validate phone
        const phone = document.getElementById('phone').value.trim();
        const phoneRegex = /^[\+]?[0-9\s\-\(\)]{10,}$/;
        if (!phone || !phoneRegex.test(phone)) {
            document.getElementById('phoneError').style.display = 'block';
            isValid = false;
        }

        // Validate email if provided
        const email = document.getElementById('email').value.trim();
        if (email) {
            const emailRegex = /^[^\s@@]+@@[^\s@@]+\.[^\s@@]+$/;
            if (!emailRegex.test(email)) {
                document.getElementById('emailError').style.display = 'block';
                isValid = false;
            }
        }

        if (!isValid) {
            e.preventDefault();
            // Scroll to first error
            const firstError = document.querySelector('.error-message[style*="block"]');
            if (firstError) {
                firstError.scrollIntoView({ behavior: 'smooth', block: 'center' });
            }
        }
    });

    // Phone number formatting
    document.getElementById('phone').addEventListener('input', function(e) {
        let value = e.target.value.replace(/\D/g, '');
        if (value.startsWith('90')) {
            value = '+' + value;
        } else if (value.startsWith('0')) {
            value = '+90' + value.substring(1);
        } else if (!value.startsWith('+')) {
            value = '+90' + value;
        }
        e.target.value = value;
    });

    // Real-time validation feedback
    document.querySelectorAll('input[required]').forEach(input => {
        input.addEventListener('blur', function() {
            const errorElement = document.getElementById(this.id + 'Error');
            if (errorElement) {
                if (this.value.trim() === '') {
                    errorElement.style.display = 'block';
                    this.style.borderColor = '#ff6b6b';
                } else {
                    errorElement.style.display = 'none';
                    this.style.borderColor = '';
                }
            }
        });
    });

    // Email validation on blur
    document.getElementById('email').addEventListener('blur', function() {
        const email = this.value.trim();
        const errorElement = document.getElementById('emailError');
        if (email) {
            const emailRegex = /^[^\s@@]+@@[^\s@@]+\.[^\s@@]+$/;
            if (!emailRegex.test(email)) {
                errorElement.style.display = 'block';
                this.style.borderColor = '#ff6b6b';
            } else {
                errorElement.style.display = 'none';
                this.style.borderColor = '';
            }
        } else {
            errorElement.style.display = 'none';
            this.style.borderColor = '';
        }
    });
</script>
</body>
</html>

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <title>title</title>
</head>
<body>
<div>
      
</div>
</body>
</html>